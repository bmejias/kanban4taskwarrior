#! /usr/bin/env python3

from random import SystemRandom as generator
from subprocess import Popen, PIPE
# from subprocess import check_output
import os
import string
import sys

TASK = '/usr/bin/task'
SPRINT_KEY_FILE = '.sprint_key'


######################################################################
# Global actions to open and close sprints
######################################################################


def open_sprint(__args__):
    if os.path.isfile(SPRINT_KEY_FILE):
        print("ERROR: Sprint already open!")
        sys.exit(1)
    else:
        sprint = open(SPRINT_KEY_FILE, 'w')
        key = ''.join(generator().choice(string.ascii_letters) for _ in range(8))
        sprint.write(key)
        sprint.close()
        print("Sprint started: %s" % key)


def close_sprint(force):
    if os.path.isfile(SPRINT_KEY_FILE):
        sprint = open(SPRINT_KEY_FILE, 'r')
        key = sprint.read()
        print("There is a sprint with key: %s" % key)
        out, err = Popen("%s +%s -done" % (TASK, 'foo'),
                         stdout=PIPE, stderr=PIPE, shell=True).communicate()
        tags = out.decode().strip()
        print("OUT " + tags)
        print("ERR " + err.decode())
        tags = 0 if tags == '' else tags.split(' ')[-1]
        if tags is 0:
            print("No tasks")
        else:
            print("What!?")
        print(tags)
    else:
        print("Sprint has not started yet!")


######################################################################
# Actions perfomed on task ids
######################################################################


def add_to_ready(taskid):
    print("Not Yet Implemented!")


def add_to_wip(taskid):
    print("Not Yet Implemented!")


def add_to_done(taskid):
    print("Not Yet Implemented!")


def block(taskid):
    print("Not Yet Implemented!")


######################################################################
# Reporting actions
######################################################################


def list_backlog():
    print("Not Yet Implemented!")


def list_blocked():
    print("Not Yet Implemented!")


def list_ready():
    print("Not Yet Implemented!")


def list_done():
    print("Not Yet Implemented!")


######################################################################
# Main procedure
######################################################################


def main():
    sprint_actions = {
        'open': open_sprint,
        'close': close_sprint
    }
    reports = {
        'backlog': list_backlog,
        'ready': list_ready,
        'blocked': list_blocked,
        'completed': list_done
    }
    actions = {
        'add': add_to_ready,
        'start': add_to_wip,
        'done': add_to_done,
        'block': block
    }
    command = None if len(sys.argv) < 2 else str(sys.argv[1])
    if command in reports.keys():
        reports[command]()
    elif command in actions.keys():
        actions[command](sys.argv)
    elif command in sprint_actions.keys():
        sprint_actions[command](sys.argv)


if __name__ == '__main__':
        main()
